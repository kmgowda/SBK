/**
 * Copyright (c) KMG. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 */

buildscript {
    repositories {
        mavenCentral()
        maven {
            url = "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath group: 'org.nosphere.apache', name: 'creadur-rat-gradle', version: apacheRatVersion
        classpath group: 'com.google.cloud.tools.jib', name: 'com.google.cloud.tools.jib.gradle.plugin', version: jibVersion
    }
}

/*
plugins {
    id 'org.jreleaser' version  "${jReleaserPluginVersion}"
}
*/

apply plugin: 'java-library'
apply plugin: "maven-publish"
apply plugin: "com.github.spotbugs"
apply plugin: 'com.google.cloud.tools.jib'


apply from: "$rootDir/gradle/rat.gradle"
apply from: "$rootDir/gradle/maven.gradle"
apply from: "$rootDir/gradle/spotbugs.gradle"


def SbmMainClass = "io.sbm.main.SbmMain"

version = project.version
jar {
    manifest {
        attributes 'Name': project.name.toUpperCase(),
                'Specification-Title': "Storage Benchmark Kit",
                'Specification-Version': project.version,
                'Specification-Vendor': "KMG",
                'Implementation-Title': project.name.toUpperCase(),
                'Implementation-Version': project.version,
                'Implementation-Vendor': "KMG"
    }
}

application {
    mainClass = SbmMainClass
    applicationName = project.name
}

dependencies {
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion
    implementation group: 'org.jetbrains', name: 'annotations', version: jetbrainVersion
    api project(":sbk-api")
}


jib {
    from {
        image = 'openjdk:21-jdk'
    }

    to {
        image = "${project.name}"
        tags = ["latest", project.version]
    }

    container {
        creationTime = 'USE_CURRENT_TIMESTAMP' // Useful for GitOps deployment approach
        mainClass = SbmMainClass
        ports = ['9717/tcp', '9719/tcp']
    }

}

tasks.register('updateDocs') {
    dependsOn javadoc
    doLast {
        println "Update $projectDir Javadocs"
        delete "$projectDir/javadoc"
        copy {
            from "$projectDir/build/docs/javadoc"
            into "$projectDir/javadoc"
        }
    }
}