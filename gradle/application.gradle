/**
 * Copyright (c) KMG. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 */
plugins.withId('application') {
    configurations.archives.with {
        artifacts.remove artifacts.find { it.hasProperty('archiveTask') && it.archiveTask.is(distZip) }
        artifacts.remove artifacts.find { it.hasProperty('archiveTask') && it.archiveTask.is(distTar) }
    }

    tasks.register('pathingJar', Jar) {
        archiveAppendix = 'pathing'

        // Delay configuring the manifest to avoid resolving the configuration
        doFirst {
            manifest {
                attributes("Class-Path":
                        configurations.runtimeClasspath.collect { it.name }.join(' ') + " " + jar.archiveFileName.get()
                )
            }
        }
    }

    application {
        applicationDistribution.from(pathingJar) {
            into "lib"
        }
    }


}